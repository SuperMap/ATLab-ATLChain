version: '2'

volumes:
    peer0.orga.example.com:

networks:
    atln:

services:
    couchdb.orga.example.com:
        container_name: couchdb.orga.example.com
        image: hyperledger/fabric-couchdb:0.4.14
        # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
        # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
        environment:
            - COUCHDB_USER=
            - COUCHDB_PASSWORD=
        # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
        # for example map it to utilize Fauxton User Interface in dev environments.
        # ports:
            # - "5984:5984"
        networks:
            - atln

    peer0.orga.example.com:
        container_name: peer0.orga.example.com
        image: hyperledger/fabric-peer:1.4.0
        depends_on:
            - couchdb.orga.example.com
        environment:
            # peer env
            - CORE_PEER_ID=peer0.orga.example.com
            - CORE_PEER_ADDRESS=${DOCKER_COMPOSE_PEER_ADDRESS}
            - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
            - CORE_PEER_CHAINCODEADDRESS=${DOCKER_COMPOSE_PEER_CC_ADDRESS}
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            - CORE_PEER_GOSSIP_BOOTSTRAP=${DOCKER_COMPOSE_PEER_GOSSIP_BOOTSTRAP}
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${DOCKER_COMPOSE_PEER_ADDRESS}
            - CORE_PEER_LOCALMSPID=OrgA
            # state database
            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.orga.example.com:5984
            - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
            - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
            # basic env
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_atln
            - FABRIC_LOGGING_SPEC=INFO
              # - FABRIC_LOGGING_SPEC=DEBUG
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        volumes:
            - /var/run/:/host/var/run/
            - ./hosts:/etc/hosts
            - ./crypto-config/peerOrganizations/orga.example.com/peers/peer0.orga.example.com/msp:/etc/hyperledger/fabric/msp
            - ./crypto-config/peerOrganizations/orga.example.com/peers/peer0.orga.example.com/tls:/etc/hyperledger/fabric/tls
            - peer0.orga.example.com:/var/hyperledger/production
        ports:
          - 7051:7051
          - 7052:7052
          - 7053:7053
        networks:
            - atln
